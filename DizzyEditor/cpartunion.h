#ifndef C_PART_UNION_H
#define C_PART_UNION_H

//****************************************************************************************************
//класс объединения кусочков карты
//****************************************************************************************************

//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include <stdint.h>
#include <fstream>
#include <list>
#include <memory>
#include "ipart.h"

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//предварительные объявления
//****************************************************************************************************

//****************************************************************************************************
//класс объединения кусочков карты
//****************************************************************************************************
class CPartUnion:public IPart
{
 public:
  //-перечисления---------------------------------------------------------------------------------------
  //-структуры------------------------------------------------------------------------------------------
  //-константы------------------------------------------------------------------------------------------
  //-переменные-----------------------------------------------------------------------------------------
 private:
  //-переменные-----------------------------------------------------------------------------------------
  std::list<std::shared_ptr<IPart>> Item;//элементы
 public:
  //-конструктор----------------------------------------------------------------------------------------
  CPartUnion(void);
  //-деструктор-----------------------------------------------------------------------------------------
  ~CPartUnion();
 public:
  //-открытые функции-----------------------------------------------------------------------------------
  bool Save(std::ofstream &file);//записать
  bool Load(std::ifstream &file);//загрузить
  void Release(void);//удалить все элементы
  void AnimateTiles(void);//выполнить анимацию тайлов
  void Visit(std::function<void(std::shared_ptr<IPart>)> callback_function);//обойти все элементы
  void RemovePartIfCoord(int32_t x,int32_t y);//удалить часть при совпадении координат
  std::list<std::shared_ptr<IPart>>* GetItemPtr(void);//получить указатель на список элементов  
 private:
  //-закрытые функции-----------------------------------------------------------------------------------  
};

#endif
