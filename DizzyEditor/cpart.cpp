//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "cpart.h"

//****************************************************************************************************
//глобальные переменные
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//конструктор и деструктор
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CPart::CPart(int32_t block_x,int32_t block_y,int32_t tile_x,int32_t tile_y,bool barrier)
{
 BlockPosX=block_x;
 BlockPosY=block_y;
 TileX=tile_x;
 TileY=tile_y;
 Barrier=barrier;
}
//----------------------------------------------------------------------------------------------------
//деструктор
//----------------------------------------------------------------------------------------------------
CPart::~CPart()
{
}

//****************************************************************************************************
//закрытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------------------------

//****************************************************************************************************
//открытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//записать
//----------------------------------------------------------------------------------------------------
bool CPart::Save(std::ofstream &file)
{
 if (file.write(reinterpret_cast<char*>(&BlockPosX),sizeof(BlockPosX)).fail()==true) return(false);
 if (file.write(reinterpret_cast<char*>(&BlockPosY),sizeof(BlockPosY)).fail()==true) return(false);

 if (file.write(reinterpret_cast<char*>(&TileX),sizeof(TileX)).fail()==true) return(false);
 if (file.write(reinterpret_cast<char*>(&TileY),sizeof(TileY)).fail()==true) return(false);

 if (file.write(reinterpret_cast<char*>(&Barrier),sizeof(Barrier)).fail()==true) return(false);

 return(true);
}
//----------------------------------------------------------------------------------------------------
//сохранить
//----------------------------------------------------------------------------------------------------
bool CPart::Load(std::ifstream &file)
{
 if (file.read(reinterpret_cast<char*>(&BlockPosX),sizeof(BlockPosX)).fail()==true) return(false);
 if (file.read(reinterpret_cast<char*>(&BlockPosY),sizeof(BlockPosY)).fail()==true) return(false);

 if (file.read(reinterpret_cast<char*>(&TileX),sizeof(TileX)).fail()==true) return(false);
 if (file.read(reinterpret_cast<char*>(&TileY),sizeof(TileY)).fail()==true) return(false);

 if (file.read(reinterpret_cast<char*>(&Barrier),sizeof(Barrier)).fail()==true) return(false);

 return(true);
}
